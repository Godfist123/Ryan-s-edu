# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserType {
  id: String!
  name: String!
  desc: String!
  account: String!
}

type Page {
  pageNum: Int!
  total: Int!
  pageSize: Int!
}

type Result {
  code: Int!
  message: String
  data: String
}

type User {
  tel: String!
  id: String!
  name: String!
  account: String!
  desc: String!
  avatarUrl: String
}

type getUserByToken {
  code: Int!
  message: String!
  data: User
}

type StudentType {
  id: String!
  createdAt: DateTime!
  createdBy: String
  updatedAt: DateTime
  updatedBy: String
  deletedAt: DateTime
  deletedBy: String

  """nickname"""
  name: String

  """tel"""
  tel: String

  """avatar"""
  avatar: String

  """account"""
  account: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type StudentResult {
  code: Int!
  message: String!
  data: StudentType
}

type StudentResults {
  code: Int!
  message: String!
  data: [StudentType!]
  page: Page
}

type OrgImageType {
  id: String
  url: String!
  remark: String
}

type OrganizationType {
  id: String!
  createdAt: DateTime!
  createdBy: String
  updatedAt: DateTime
  updatedBy: String
  deletedAt: DateTime
  deletedBy: String

  """businessLicense"""
  businessLicense: String!

  """identityCardFrontImg"""
  identityCardFrontImg: String!

  """identityCardBackImg"""
  identityCardBackImg: String!

  """tags"""
  tags: String

  """description"""
  description: String

  """name"""
  name: String

  """logo"""
  logo: String

  """longitude"""
  longitude: String

  """latitude"""
  latitude: String

  """address"""
  address: String

  """tel"""
  tel: String

  """orgFrontImg"""
  orgFrontImg: [OrgImageType!]

  """orgRoomImg"""
  orgRoomImg: [OrgImageType!]

  """orgOtherImg"""
  orgOtherImg: [OrgImageType!]
}

type OrganizationResult {
  code: Int!
  message: String!
  data: OrganizationType
}

type OrganizationResults {
  code: Int!
  message: String!
  data: [OrganizationType!]
  page: Page
}

type CourseType {
  id: String!
  createdAt: DateTime!
  createdBy: String
  updatedAt: DateTime
  updatedBy: String
  deletedAt: DateTime
  deletedBy: String

  """course name"""
  name: String!

  """course description"""
  desc: String

  """age group"""
  group: String

  """prerequisites"""
  prerequisites: String!

  """maximum number of students"""
  maximum: Float!

  """course duration"""
  duration: Float!

  """appointment"""
  appointment: String

  """refund"""
  refund: String

  """other"""
  other: String
}

type CourseResult {
  code: Int!
  message: String!
  data: CourseType
}

type CourseResults {
  code: Int!
  message: String!
  data: [CourseType!]
  page: Page
}

type Query {
  """Find one user"""
  findOne(id: String!): UserType!

  """Find one user by tel"""
  findOneByTel(tel: String!): UserType!
  getUserByToken(token: String!): getUserByToken
  getStudentInfo: StudentResult!
  getStudents(page: PageInput!): StudentResults!
  getOrganizationInfo(id: String!): OrganizationResult!
  getOrganizations(page: PageInput!, name: String): CourseResults!
  getCourseInfo(id: String!): CourseResult!
}

input PageInput {
  pageNum: Float!
  pageSize: Float!
}

type Mutation {
  create(params: UserInput!): Boolean!

  """Update user"""
  update(id: String!, params: UserInput!): Result!

  """Delete user"""
  delete(id: String!): Result!
  sendOTP(tel: String!): Result!
  checkOTP(tel: String!, code: String!): Result!

  """Student Login"""
  studentLogin(account: String!, password: String!): Result!

  """Student register"""
  studentRegister(account: String!, password: String!): Result!
  commitStudentInfo(params: StudentInput!): StudentResult!
  commitOrganization(params: OrganizationInput!, id: String): OrganizationResult!
  deleteOrganization(id: String!): Result!
  commitCourseInfo(params: CourseInput!, id: String): CourseResult!
  deleteCourse(id: String!): Result!
}

input UserInput {
  name: String
  desc: String
  avatarUrl: String
}

input StudentInput {
  """nickname"""
  name: String!

  """tel"""
  tel: String!

  """avatar"""
  avatar: String!
}

input OrganizationInput {
  """name"""
  name: String!

  """logo"""
  logo: String!

  """tel"""
  tel: String

  """tags"""
  tags: String

  """longitude"""
  longitude: String

  """latitude"""
  latitude: String

  """latitude"""
  address: String

  """businessLicense"""
  businessLicense: String!

  """description"""
  description: String!

  """identityCardFrontImg"""
  identityCardFrontImg: String!

  """identityCardBackImg"""
  identityCardBackImg: String!

  """orgFrontImg"""
  orgFrontImg: [OrgImageInput!]

  """orgRoomImg"""
  orgRoomImg: [OrgImageInput!]

  """orgOtherImg"""
  orgOtherImg: [OrgImageInput!]
}

input OrgImageInput {
  id: String
  url: String!
  remark: String
}

input CourseInput {
  """course name"""
  name: String!

  """course description"""
  desc: String

  """age group"""
  group: String

  """prerequisites"""
  prerequisites: String!

  """maximum number of students"""
  maximum: Float!

  """course duration"""
  duration: Float!

  """appointment"""
  appointment: String

  """refund"""
  refund: String

  """other"""
  other: String
}